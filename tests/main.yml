---
# Tasks for testing role

- name: create testing environment
  hosts: localhost
  vars:
    test_inventory_path: ansible-windows/vagrant/inventory.yml
  tasks:
    - name: create environment
      block:

        - stat:
            path: "{{ test_inventory_path }}"
          register: inventory_stat_result

        - name: get jborean93/ansible-windows repository
          when: not inventory_stat_result.stat.exists
          block:

            - name: Fix inventory
              debug:
                msg: "Overlook inventory warnings, retrieving inventory file with git"

            - name: clone jborean93/ansible-windows repository
              git:
                repo: 'https://github.com/jborean93/ansible-windows.git'
                dest: ansible-windows
                update: no

        - name: refresh inventory
          meta: refresh_inventory
          check_mode:  no

        - name: configure winrm port
          replace:
            path: "{{ test_inventory_path }}"
            regexp: 'ansible_port: \d*\s*$'
            replace: 'ansible_port: 5985'

        - name: configure winrm transport
          replace:
            path: "{{ test_inventory_path }}"
            regexp: 'ansible_winrm_transport: \w*\s*$'
            replace: 'ansible_winrm_transport: ntlm'

        - name: adapt inventory to one DC and only one server
          replace:
            path: "{{ test_inventory_path }}"
            regexp: "^( *{{ line }} *)$"
            replace: '# \1'
          loop_control:
            loop_var: line
          with_items:
            - "SERVER2008:"
            - "ansible_host: 192.168.56.11"
            - "vagrant_box: jborean93/WindowsServer2008-x64"
            - "opt_domain_join_is_longhorn: yes"
            - "SERVER2008R2:"
            - "ansible_host: 192.168.56.12"
            - "vagrant_box: jborean93/WindowsServer2008R2"
            - "SERVER2012:"
            - "ansible_host: 192.168.56.13"
            - "vagrant_box: jborean93/WindowsServer2012"
            - "SERVER2012R2:"
            - "ansible_host: 192.168.56.14"
            - "vagrant_box: jborean93/WindowsServer2012R2"

        - name: add host to group 'test_machines'
          add_host:
            name: "SERVER2016"
            groups: test_machines
          changed_when: false
          check_mode:  no

        - name: get running machines
          shell: "vagrant status --machine-readable {{ vm }}"
          args:
            chdir: ansible-windows/vagrant/
          check_mode:  no
          register: vagrant_vm_status_result
          loop_control:
            loop_var: vm
          with_items:
            - dc
            - SERVER2016
          changed_when: false

        - name: wake up the virtual machines
          when: >-
            (vagrant_vm_status_result.results
            | map(attribute='stdout')
            | map('regex_search', '.*,state,running')
            | select('string')
            | list
            | length
            ) != 2

          shell: vagrant up
          args:
            chdir: ansible-windows/vagrant/

      tags: win_domain_groups::create_environment

- name: run win_domain_groups test
  hosts: test_machines
  vars:
    test_ad_pdc: DC01
    test_ad_user: ansible_test
    test_ad_ou: CN=Users,DC=domain,DC=local
    test_ad_group: ansible_test_group
    test_ad_group_ou: "{{ test_ad_ou }}"
    test_ad_max_users: 4
    test_domain_name: "{{ man_domain_setup_domain_name }}"
    test_domain_password: "{{ man_domain_setup_password }}"
    test_domain_username: "{{ man_domain_setup_username }}"
    # ansible-windows/vagrant/inventory.yml have transport to basic, we need
    #  to rewrite it to work
    ansible_winrm_transport: credssp
  tasks:
    
    - name: ensure win_domain_group is working
      block:
        - name: ensure the RSAT-AD-PowerShell feature is installed
          win_feature:
            name:
              - RSAT-AD-PowerShell
            state: present
          register: ad_feature_result

        - name: reboot host if required
          win_reboot:
          when: ad_feature_result.reboot_required

        - name: win ping
          win_ping:
        - name: "win ping {{ test_ad_pdc }}"
          win_ping:
          delegate_to: "{{ test_ad_pdc }}"
          run_once: true

        - name: add test user
          win_domain_user:
            name: "{{ test_ad_user }}"
            upn: '{{ test_ad_user }}@{{ test_domain_name }}'
            password: '{{ test_domain_password }}'
            update_password: on_create
            state: present

        - name: add test group
          win_domain_group:
            name: "{{ test_ad_group }}"
            scope: global
            path: "{{ test_ad_ou }}"
            state: present

        - name: remove test group
          win_domain_group:
            name: "{{ test_ad_group }}"
            state: absent

        - name: delete user
          win_domain_user:
            name: "{{ test_ad_user }}"
            domain_server: "{{ test_ad_pdc }}"
            state: absent

      tags: win_domain_users::previous

    - name: create test users
      include_role:
        name: amtega.win_domain_groups
      vars:
        win_domain_groups_defaults:
          scope: global
          category: security
          path: "{{ test_ad_ou }}"
        win_domain_groups:
          - name: my_group
            state: present
          - name: our_group
            state: present
          - name: your_group
            state: present

      tags:  win_domain_groups::readme_example
